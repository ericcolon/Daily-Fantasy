wd()
getwd()
library(devtools)
document()
document()
build()
setwd("..")
install(./DailyMLB)
install("DailyMLB")
setwd(DailyMLB)
setwd(/Documents/DailyMLB)
setwd("/Documents/DailyMLB")
library(roxygen2)
document("DailyMLB")
build("DailyMLB")
install(./DailyMLB)
install('./DailyMLB')
library(DailyMLB)
get.table(url = "http://www.dfsgold.com/mlb/daily-fantasy-recap-draftkings-jul-20-2016-10535
")
fromJSON(http://www.dfsgold.com/mlb/daily-fantasy-recap-draftkings-jul-20-2016-10535)
fromJSON("http://www.dfsgold.com/mlb/daily-fantasy-recap-draftkings-jul-20-2016-10535")
jsonlite::fromJSON('http://www.dfsgold.com/mlb/daily-fantasy-recap-draftkings-jul-20-2016-10535')
source('~/Documents/RPackagesToLoadatStartUp.R')
library(rvest)
rvcest
read.html(http://www.dfsgold.com)
read.table("htttp://www.dfsgold.com")
read.table(url="http://www.dfsgold.com/mlb/daily-fantasy-recap-draftkings-aug-07-2016")
read.html(url url(http://www.dfsgold.com/mlb/daily-fantasy-recap-draftkings-aug-07-2016))
labsEmail "benjaminryanshopping@icloud.com"
labsPw "W3ytjk589682"
web <-remoteDriver(browserName = phantomJS)
getwd()
setWD("..")
setwd("..")
getwd()
pJS M- phantom()
pJS <- phantom()
RSelenium::checkForServer()
pJS <- phantom()
web<-remoteDriver(browserName)
source('~/Documents/RPackagesToLoadatStartUp.R')
library(codetools)
library(compiler)
library(corrplot)
library(curl)
library(DailyMLB)
library(data.table)
library(devtools)
library(dplyr)
library(DT)
library(evaluate)
library(fastmatch)
library(ffanalytics)
library(formatR)
library(gdata)
library(ggplot2)
library(git2r)
library(highr)
library(htmltools)
library(htmlwidgets)
library(httpur)
library(httr)
library(jsonlite)
library(knitr)
library(lubridate)
library(;azyeval)
library(magittr)
library(Matrix)
library(openssl)
library(pacman)
library(plyr)
library(parallel)
library(Rcpp)
library(Rcurl)
library(readr)
library(readxl)
library(rematch)
library(reshape2)
library(rio)
library(rjson)
library(RJSONio)
library(roxygen2)
library(xtable)
library(xml2)
library(XMLwithr)
library(rpost)
library(Rselenium)
library(rvest)
library(slectr)
library(shiny)
library(splines)
library(stats4)
library(stringr)
library(survival)
library(tcltk)
library(tidyjson)
library(tidyr)
library(tools)
library(urltools)
sModel <- swishHitters()
swisherlyLabModel<-function(x=sModel,y=lModel){
rankRows<-dim(sModel)[1]
sModelWRank <- sModel %>% mutate(sRank1=c(1:rankRows))
fullModel<- inner_join(sModelWRank,lModel)
projectionStart <- dim(fullModel)[1]*2/10
sProjection <- projectionStart-(fullModel$sRank1 * 0.1)
fullModel_sProjections <- fullModel %>% mutate(swishProjection=sProjection)
sProjectionxThree <- fullModel_sProjections$swishProjection * 3
swishFinalProjection <- sProjectionxThree
lModelScore <- fullModel_sProjections$Score
fullModelProjectionsAverage <- (swishFinalProjection + lModelScore)/2
fullModelEverything <- fullModel_sProjections %>% mutate(finalProjection=fullModelProjectionsAverage)
fullModelEverything %>% arrange(desc(finalProjection))
subsettedFinalProjections <- fullModelEverything %>% select(player_Name, Properties.ActualPoints, finalProjection)
return(subsettedFinalProjections)
}
library("RSelenium", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
web <- remoteDriver(browserName = phantomJS)
web <- remoteDriver(browserName = phantomjs
)
web <- remoteDriver(browserName = phantomJS)
browserName = phantom
web <-remoteDriver(browserName = phantom)
library(lazyeval)
RSelenium::checkForServer()
pJS <- phantom()
web <- remoteDriver(browserName = phantom)
web <- remoteDriver(browserName = "phantomjs"
)
web@open()
web$open()\
web <- remoteDriver(browserName = "phantom")
)
library(codetools)
library(compiler)
library(corrplot)
library(curl)
library(DailyMLB)
library(data.table)
library(devtools)
library(dplyr)
library(DT)
library(evaluate)
library(fastmatch)
library(ffanalytics)
library(formatR)
library(gdata)
library(ggplot2)
library(git2r)
library(highr)
library(htmltools)
library(htmlwidgets)
library(httpur)
library(httr)
library(jsonlite)
library(knitr)
library(lubridate)
library(lazyeval)
library(magittr)
library(Matrix)
library(openssl)
library(pacman)
library(plyr)
library(parallel)
library(Rcpp)
library(Rcurl)
library(readr)
library(readxl)
library(rematch)
library(reshape2)
library(rio)
library(rjson)
library(RJSONio)
library(roxygen2)
library(xtable)
library(xml2)
library(XMLwithr)
library(rpost)
library(Rselenium)
library(rvest)
library(slectr)
library(shiny)
library(splines)
library(stats4)
library(stringr)
library(survival)
library(tcltk)
library(tidyjson)
library(tidyr)
library(tools)
library(urltools)
RSelenium::checkForServer()
getMlbPlayerModel()
sModel <- swishHitters()
lModel <- getMlbPlayerModel()
swisherlyLabModel(x=sModel,y=lModel)
swisherlyLabModel(x=sModel,y=lModel)
Vie(sModel)
View(sModel)
swisherlyLabModel(x = sModel, y = lModel)
rankRows(sModel)[1]
rankRows<-dim(sModel)[1]
swisherlyLabModel(x = sModel, y = lModel)
source('~/Documents/DailyMLB/R/swisherlyLabsRankingFunction.R')
swisherlyLabModel(x=sModel,y=lModel)
x<= sModel
y <-lModel
View(sModel)
library(DailyMLB)
sModel <- swishHitters()
library(codetools)
library(corrplot)
library(DailyMLB)
library(data.table)
library(dplyr)
library(fastmatch)
library(formatR)
library(htmlwidgets)
library(jsonlite)
library(lazyeval)
library(Rcurl)
RSelenium::checkForServer()
pJS <- phantom
pJS <- phantom()
librar(jsonlite)
library(jsonlite)
sModel <- swishHitters()
web <- remotedriver(browserName = "phantomjs")
pJS <- phantomJS
unload(pacman)
setwd("..")
getwd()
pJS <- phantom
pJS <- phantom()
phantomjs::phantom
library("codetools", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("curl", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("DailyMLB", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("data.table", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("jsonlite", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("withr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("tools", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("tidyjson", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
swishHitters()
library(RSelenium)
library(DailyMLB)
library(jsonlite)
library(dplyr)
library(tidyr)
sModel <- swishHitters()
swishHitters(2016-08-08)
swishHitters()
library(DailyMLB)
getswishHitters
swishHitters(2016-08-08)
okay <- swishhitter
swishHitters()
